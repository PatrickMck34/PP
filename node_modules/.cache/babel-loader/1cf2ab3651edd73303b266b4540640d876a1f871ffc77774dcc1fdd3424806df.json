{"ast":null,"code":"var _jsxFileName = \"/home/patrick/PP/promise/src/components/geoLocation/geolocation.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport getZipCode from \"../zipcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Geolocation() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [zipCode, setZipCode] = useState(null);\n  // const getLocation = () => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      // let zip =  getZipCode(position.coords.latitude, position.coords.longitude)\n\n      // console.log(zipCode)\n      setZipCode(getZipCode(position.coords.latitude, position.coords.longitude).result);\n      setLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    }, error => {\n      console.log(\"Error occurred while getting location: \", error);\n    }, {\n      timeout: 5000 // Timeout after 5 seconds\n    });\n  } else {\n    console.log(\"Geolocation is not supported by this browser.\");\n  }\n  useEffect(() => {\n    if (location) {\n      getZipCode(location.latitude, location.longitude).then(zipCode => {\n        setZipCode(zipCode);\n      }).catch(error => {\n        console.log('Error getting zip code:', error);\n      });\n    }\n  }, [zipCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center mx-auto w-full text-2xl\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Geolocation, \"43Z0+Lx2OwIzDxtnmSubcY4+O6Q=\");\n_c = Geolocation;\nexport default Geolocation;\nvar _c;\n$RefreshReg$(_c, \"Geolocation\");","map":{"version":3,"names":["React","useState","useEffect","Link","getZipCode","jsxDEV","_jsxDEV","Geolocation","_s","location","setLocation","zipCode","setZipCode","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","result","error","console","log","timeout","then","catch","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/patrick/PP/promise/src/components/geoLocation/geolocation.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport getZipCode from \"../zipcode\";\n\nfunction Geolocation() {\n    const [location, setLocation] = useState(null);\n    const [zipCode, setZipCode] = useState(null);\n    // const getLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n            // let zip =  getZipCode(position.coords.latitude, position.coords.longitude)\n\n            // console.log(zipCode)\n            setZipCode(getZipCode(position.coords.latitude, position.coords.longitude).result\n            )\n            setLocation({\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n            });\n        },\n            (error) => {\n                console.log(\"Error occurred while getting location: \", error);\n            },\n            {\n                timeout: 5000, // Timeout after 5 seconds\n            }\n        );\n    } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n    }\n\n\n\n\n    useEffect(() => {\n        if (location) {\n            getZipCode(location.latitude, location.longitude)\n                .then(zipCode => {\n                    setZipCode(zipCode)\n\n                })\n                .catch(error => {\n                    console.log('Error getting zip code:', error);\n                });\n        }\n    }, [zipCode]);\n    return (\n        <div className=\"flex justify-center mx-auto w-full text-2xl\">\n            {/* <button onClick={getLocation} className=\"mt-2 w-48 h-9 border-2 border-teal-700 bg-teal-600 rounded-xl text-center text-pink-50 font-['Jomolhari']\">Get Location</button> */}\n            {/* {location && <p>Latitude: {location.latitude}, Longitude: {location.longitude}</p>} */}\n            {/* {zipCode && <p>Zip Code: {zipCode}</p>} */}\n\n        </div>\n    )\n}\n\n\n\nexport default Geolocation"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA,IAAIY,SAAS,CAACC,WAAW,EAAE;IACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACnD;;MAEA;MACAJ,UAAU,CAACR,UAAU,CAACY,QAAQ,CAACC,MAAM,CAACC,QAAQ,EAAEF,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC,CAACC,MAC3E,CAAC;MACDV,WAAW,CAAC;QACRQ,QAAQ,EAAEF,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAClCC,SAAS,EAAEH,QAAQ,CAACC,MAAM,CAACE;MAC/B,CAAC,CAAC;IACN,CAAC,EACIE,KAAK,IAAK;MACPC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,KAAK,CAAC;IACjE,CAAC,EACD;MACIG,OAAO,EAAE,IAAI,CAAE;IACnB,CACJ,CAAC;EACL,CAAC,MAAM;IACHF,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAChE;EAKArB,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAE;MACVL,UAAU,CAACK,QAAQ,CAACS,QAAQ,EAAET,QAAQ,CAACU,SAAS,CAAC,CAC5CM,IAAI,CAACd,OAAO,IAAI;QACbC,UAAU,CAACD,OAAO,CAAC;MAEvB,CAAC,CAAC,CACDe,KAAK,CAACL,KAAK,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MACjD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EACb,oBACIL,OAAA;IAAKqB,SAAS,EAAC;EAA6C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKvD,CAAC;AAEd;AAACvB,EAAA,CAlDQD,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAsDpB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}