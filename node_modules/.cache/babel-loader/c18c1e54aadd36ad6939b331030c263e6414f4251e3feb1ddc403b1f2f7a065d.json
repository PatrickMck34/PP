{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return data;\n};\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\"\n  });\n  dispatch(removeUser());\n  return response;\n};\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\");\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const setUser = user => {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n};\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER\n  };\n};\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const Demo = () => async dispatch => {\n  const credential = \"DemoUser\";\n  const password = \"123456\";\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nconst initialState = {\n  user: null\n};\nexport const sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default sessionReducer;","map":{"version":3,"names":["csrfFetch","SET_USER","REMOVE_USER","signup","user","dispatch","username","email","password","response","method","body","JSON","stringify","data","json","setUser","logout","removeUser","restoreUser","type","payload","login","credential","Demo","initialState","sessionReducer","state","action","newState","Object","assign"],"sources":["/home/patrick/PP/promise/src/store/session.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n    \n      email,\n      username,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return data;\n};\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeUser());\n  return response;\n};\n\nexport const restoreUser = () => async (dispatch) => {\n  const response = await csrfFetch(\"/api/session\");\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const Demo = () => async (dispatch) => {\n  const credential = \"DemoUser\";\n  const password = \"123456\";\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\nconst initialState = { user: null };\n\nexport const sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}