{"ast":null,"code":"import { csrfFetch } from './csrf';\nimport Dialogue from '../resources/dialogue';\nconst READ_CHAT = '/chat';\nconst DELETE_CHAT = '/chat/:ChatcreateChatId';\nconst CREATE_CHAT = '/chat/new';\nexport const createChat = chat => async dispatch => {\n  const {\n    chats\n  } = chat;\n  const data = await csrfFetch(`/api/chat`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      chats\n    })\n  });\n  const response = await data.json();\n  dispatch(createChats(response));\n  return response;\n};\nexport const getChat = spotId => async dispatch => {\n  const data = await csrfFetch(`/api/spots/${spotId}/reviews`);\n  const response = await data.json();\n  dispatch(getChats(response));\n  return response;\n};\nexport const getChats = rev => ({\n  type: READ_CHAT,\n  payload: rev\n});\nexport const createChats = chat => ({\n  type: CREATE_CHAT,\n  payload: chat\n});\nconst initialState = {\n  allChat: Dialogue\n};\nexport const chatReducer = (state = initialState, action) => {\n  let newState = {};\n  switch (action.type) {\n    case CREATE_CHAT:\n      newState = {\n        allChat: {\n          ...state.allChat\n        }\n      };\n      newState.allChat[action.payload.id] = action.payload;\n      return newState;\n    case READ_CHAT:\n      newState = {\n        allChat: {\n          ...state.allChat\n        }\n      };\n      return newState;\n    case DELETE_CHAT:\n      newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      break;\n    default:\n      return state;\n  }\n};\nexport default chatReducer;","map":{"version":3,"names":["csrfFetch","Dialogue","READ_CHAT","DELETE_CHAT","CREATE_CHAT","createChat","chat","dispatch","chats","data","method","body","JSON","stringify","response","json","createChats","getChat","spotId","getChats","rev","type","payload","initialState","allChat","chatReducer","state","action","newState","id"],"sources":["/home/patrick/PP/promise/src/store/chatStore.js"],"sourcesContent":["import { csrfFetch } from './csrf';\nimport Dialogue from '../resources/dialogue'\nconst READ_CHAT = '/chat'\nconst DELETE_CHAT = '/chat/:ChatcreateChatId';\nconst CREATE_CHAT = '/chat/new'\n\n\nexport const createChat = (chat) => async (dispatch) => {\n    const { chats } = chat\n    const data = await csrfFetch(`/api/chat`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            chats\n        }),\n    });\n    const response = await data.json()\n\n    dispatch(createChats(response))\n    return response\n}\nexport const getChat = (spotId) => async (dispatch) => {\n    const data = await csrfFetch(`/api/spots/${spotId}/reviews`)\n    const response = await data.json()\n    dispatch(getChats(response))\n    return response\n}\nexport const getChats = (rev) => ({\n    type: READ_CHAT,\n    payload: rev\n})\nexport const createChats = (chat) => ({\n    type: CREATE_CHAT,\n    payload: chat\n})\n\n\n\n\n\nconst initialState = { allChat: Dialogue }\nexport const chatReducer = (state = initialState, action) => {\n    let newState = {}\n\n    switch (action.type) {\n        case CREATE_CHAT:\n            newState = { allChat: { ...state.allChat } }\n            newState.allChat[action.payload.id] = action.payload\n            return newState\n\n\n        case READ_CHAT:\n\n            newState = { allChat: { ...state.allChat } }\n            return newState\n\n\n\n        case DELETE_CHAT:\n            newState = { ...state }\n            delete newState[action.payload]\n            break;\n        default:\n            return state\n    }\n}\nexport default chatReducer"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,MAAMC,SAAS,GAAG,OAAO;AACzB,MAAMC,WAAW,GAAG,yBAAyB;AAC7C,MAAMC,WAAW,GAAG,WAAW;AAG/B,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACpD,MAAM;IAAEC;EAAM,CAAC,GAAGF,IAAI;EACtB,MAAMG,IAAI,GAAG,MAAMT,SAAS,CAAE,WAAU,EAAE;IACtCU,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBL;IACJ,CAAC;EACL,CAAC,CAAC;EACF,MAAMM,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;EAElCR,QAAQ,CAACS,WAAW,CAACF,QAAQ,CAAC,CAAC;EAC/B,OAAOA,QAAQ;AACnB,CAAC;AACD,OAAO,MAAMG,OAAO,GAAIC,MAAM,IAAK,MAAOX,QAAQ,IAAK;EACnD,MAAME,IAAI,GAAG,MAAMT,SAAS,CAAE,cAAakB,MAAO,UAAS,CAAC;EAC5D,MAAMJ,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;EAClCR,QAAQ,CAACY,QAAQ,CAACL,QAAQ,CAAC,CAAC;EAC5B,OAAOA,QAAQ;AACnB,CAAC;AACD,OAAO,MAAMK,QAAQ,GAAIC,GAAG,KAAM;EAC9BC,IAAI,EAAEnB,SAAS;EACfoB,OAAO,EAAEF;AACb,CAAC,CAAC;AACF,OAAO,MAAMJ,WAAW,GAAIV,IAAI,KAAM;EAClCe,IAAI,EAAEjB,WAAW;EACjBkB,OAAO,EAAEhB;AACb,CAAC,CAAC;AAMF,MAAMiB,YAAY,GAAG;EAAEC,OAAO,EAAEvB;AAAS,CAAC;AAC1C,OAAO,MAAMwB,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACzD,IAAIC,QAAQ,GAAG,CAAC,CAAC;EAEjB,QAAQD,MAAM,CAACN,IAAI;IACf,KAAKjB,WAAW;MACZwB,QAAQ,GAAG;QAAEJ,OAAO,EAAE;UAAE,GAAGE,KAAK,CAACF;QAAQ;MAAE,CAAC;MAC5CI,QAAQ,CAACJ,OAAO,CAACG,MAAM,CAACL,OAAO,CAACO,EAAE,CAAC,GAAGF,MAAM,CAACL,OAAO;MACpD,OAAOM,QAAQ;IAGnB,KAAK1B,SAAS;MAEV0B,QAAQ,GAAG;QAAEJ,OAAO,EAAE;UAAE,GAAGE,KAAK,CAACF;QAAQ;MAAE,CAAC;MAC5C,OAAOI,QAAQ;IAInB,KAAKzB,WAAW;MACZyB,QAAQ,GAAG;QAAE,GAAGF;MAAM,CAAC;MACvB,OAAOE,QAAQ,CAACD,MAAM,CAACL,OAAO,CAAC;MAC/B;IACJ;MACI,OAAOI,KAAK;EACpB;AACJ,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}